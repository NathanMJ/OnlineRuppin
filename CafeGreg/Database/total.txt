
------------	Collections

X	Template
XX	In MongoDB


//cafe side		06/14

X	orders
X	order_status_history
X	ingredients
X	products
XX	customers
X	order_history
X	autorizations_sended
XX	tables
XX	section
XX	order_status
XX	ingredient_changes
XX	product_destination
XX	website
X	delays_details

//add ranks and optional comment

//worker side
	
	
	

//add workers with start and end service 
	with the id of who start or end the service


------------	Functions

X	customer_register(id, contact)
X	customer_login(id, table)
X	login_website(login, password)
X	change_login_website(login, password)
X	add_customer_to_table(id, table)
X	erase_customer_of_the_table(customer, table)
X	customer_is_connected(id)
X	table_exist(id)
X	transfer_customer_to_table(customer, table)
X	switch_tables(table_1,table_2)
X	send_authorization(id)
	Get an order history according to an id
	Get the ingredients of the order
	change the status of an order (orders)
	
	
------------	Template

order_status = ['pending','ordered','in preparation','ready','received','paid','canceled']

order_status_history = {
	order_id,
	status_code,
	time_set
}

order = {
	_id,
	product_id,
	changes: [
		{ ingredients_id, code_change}
	]
}

ingredient_changes = ["without","with","a lot of", "aside"]

ingredient = {
    _id,
    name,
	img,
	changes_detail : [ {change_code, price} ] (optional)
  }
	
}

product = {
    _id,
    name,
    description,
    price,
    img,
    ingredients: [],
	destination
}

product_destination = ['kitchen','bar']


customer = {
	_id: tz,
	contact: email/phone,
	name
}

order_history = {
	customers_id: [],
	orders_id: []
}

autorizations_sended = {
	customer_id,
	sended_time
}

table = {
	_id,
	customers: [], can be empty if the customer dont want to log 
	orders: []
}

sections = {
	_id,
	name,
	img,
	parent_id,
	products: [] 
}

if parent_id does not exist these section are in the main so show them
if exist 
	if the array products exist show products
	if not exist show every section with the parent_id of the id 

website = {
	login, (encoded)
	password,(encoded)
	recovery_email (encoded)
}

delays_details = [name, delay]

------------	Sections

	Main
		Most ordered
		Starters
		Meals
			Main
			Breakfasts
			Italian
			Sandwichs
			Salads
		Desserts
			Pancakes
			Waffles
		Drinks
			Bottles/Cans
			Beers
		
			
------------	MongoDB

use cafeGregDB

db.order_status.insertMany([
  { _id: 0, status: "pending" },
  { _id: 1, status: "ordered" },
  { _id: 2, status: "in preparation" },
  { _id: 3, status: "ready" },
  { _id: 4, status: "received" },
  { _id: 5, status: "paid" },
  { _id: 6, status: "canceled" }
])


db.product_destination.insertMany([
	{ _id: 0, destination: 'kitchen'},
	{ _id: 1, destination: 'bar'}
])


db.ingredient_changes.insertMany([
	{_id: 0, change: 'without'},
	{_id: 1, change: 'with'},
	{_id: 2, change: 'a lot of'},
	{_id: 3, change: 'aside'}
])


db.customers.insertMany([
	{
		_id: '345538268',
		contact: '0584020406'
	},
	{
		_id: '345481402',
		contact: 'nathanmimoun2001@gmail.com'
	}
])

db.website.insertMany([{
		login: 'CafeGreg',
		password: '123',
		recovery_email: 'nathanmimoun2001@gmail.com'
}])

db.createCollection("tables")

db.sections.insertMany([
	{
		_id: 0,
		name: "Most ordered",
		img: "image.png"
	},
	{
		_id: 1,
		name: "Starters",
		img: "image.png"
	},
	{
		_id: 2,
		name: "Meals",
		img: "image.png"
	},
	{
		_id: 3,
		name: "Desserts",
		img: "image.png"
	},
	{
		_id: 4,
		name: "Drinks",
		img: "image.png"
	},
	{
		_id: 5,
		name: "Main Courses",
		img: "image.png",
		parent_id: 2
	},
	{
		_id: 6,
		name: "Breakfasts",
		img: "image.png",
		parent_id: 2
	},
	{
		_id: 7,
		name: "Italians",
		img: "image.png",
		parent_id: 2
	},
	{
		_id: 8,
		name: "Sandwichs",
		img: "image.png",
		parent_id: 2
	},
	{
		_id: 9,
		name: "Salads",
		img: "image.png",
		parent_id: 2
	},
	{
		_id: 10,
		name: "Pancakes",
		img: "image.png",
		parent_id: 3
	},
	{
		_id: 11,
		name: "Waffles",
		img: "image.png",
		parent_id: 3
	},
	{
		_id: 12,
		name: "Bottles/Cans",
		img: "image.png",
		parent_id: 4
	},
	{
		_id: 13,
		name: "Beers",
		img: "image.png",
		parent_id: 4,
		need_autorization : true
	}
])

db.delays_detail.insertMany([
{
	_id: 0,
	name: 'authorization_sended',
	time_sec: 10
}])

db.createCollection("authorization_sended")

db.authorization_sended.createIndex(
  { expireAt: 1 },
  { expireAfterSeconds: 0 }
)



				
------------	 MongoDB functions

function customer_register(id, contact){
	if(!id || !contact){
		print("A parameter is missing")
		return;
	}
	var exist = db.customers.findOne({_id:id,contact})
	if(exist){
		print(`User ${id} already exist please login.`)
	}
	else{
		//Send a message to the contact to check id
		
		//After the verification :		
		db.customers.insertOne({_id:id,contact})
		print(`Registered successfully.`)
	}
}

function add_customer_to_table(id, table){	
	//if the table exist
	var tableExist = db.tables.findOne({_id:table})
	if(tableExist){		
		//Check that he is not already at a table
		var alreadyIn = db.tables.findOne({customers: {$in: [id]}})			
		if(alreadyIn){
			print(`${id} is already in the table ${alreadyIn._id}`)
		}
		else{
			db.tables.updateOne({_id:table}, {$push:{customers: id}})
			print(`Customer ${id} has been added to the table ${table}`)
		}
	}
	else{
		//if the table doesnt exist
		db.tables.insertOne({_id:table, customers: [id]})		
	}		
}

function customer_login(id, table){
	if(!id || !table){
		print("A parameter is missing")
		return;
	}	
	var customer = db.customers.findOne({_id:id})
	if(!customer){
		print(`User ${id} does not exist please register.`)
	}
	else{
		//Add the customer to the table
		add_customer_to_table(id, table)
		print(`Logged successfully. ${id} added to the table ${table}`)
	}
}


function login_website(login, password){
	var log = db.website.findOne({login, password})
	if(log){
		print('Connecting')
	}
	else {
		print('Error')
	}
}


function change_login_website(login, password){
    if (login) {
        var precLog = db.website.findOne().login;
        db.website.updateOne({}, { $set: { login: login } });
        print(`Login changed from ${precLog} to ${login}`);
    }
    if (password) {
        var precPass = db.website.findOne().password;
        db.website.updateOne({}, { $set: { password: password } });
        print(`Password changed from ${precPass} to ${password}`);
    }
}

function customer_is_connected(id){
	if(!id){
		print('Id is missing')
		return;
	}
	var table = db.tables.findOne({customers:{$in:[id]}})
	return table ? ({connected:true,table_id:table._id}) : ({connected:false});
}

function table_exist(id){
	if(!id){
		print('Id is missing')
		return false;
	}
	var table = db.tables.findOne({_id:id})
	return table ? true : false;
}

function erase_customer_of_the_table(customer, table){
	if(!customer || !table){
		print('Parameter is missing')
		return
	}	
	db.tables.updateOne({_id: table},{$pull:{ customers: customer}})
	print(`Customer ${customer} has been removed from the table ${table}`)
}

function transfer_customer_to_table(customer, table){
	//check if the customer is connected
	var res = customer_is_connected(customer)
	
	if(!res.connected){
		print(`${customer} is not connected`)
		return
	}	
	
	//erase the customer in the prec table
	erase_customer_of_the_table(customer, res.table_id)
		
	//create the table and add the customer
	add_customer_to_table(customer, table)		
}


function switch_tables(table_1,table_2){

var tempTables = [
	db.tables.findOne({_id:table_1}),
	db.tables.findOne({_id:table_2})
	]

if(!tempTables[0]){
	db.tables.insertOne({_id:table_1})
	tempTables[0] = {_id:table_1}
}

if(!tempTables[1]){
	db.tables.insertOne({_id:table_2})
	tempTables[1] = {_id:table_2}
}
	
db.tables.deleteOne({_id:table_1})
db.tables.deleteOne({_id:table_2})

delete tempTables[0]._id 
delete tempTables[1]._id

db.tables.insertOne({...tempTables[0], _id:table_2})
db.tables.insertOne({...tempTables[1], _id:table_1})


print(`The table ${table_1} and the table ${table_2} have been switched`)
}

function send_authorization(id) {
if(!id){
	print('Id is missing')
	return
}
  var exist = db.authorization_sended.findOne({ _id: id });
  if (exist) {
    print("Authorization already exists");
    return;
  }
  var time = db.delays_detail.findOne({'name':'authorization_sended'}).time_sec
  
  time = time ? time : 10;

  db.authorization_sended.insertOne({
    _id: id,
    expireAt: new Date(Date.now() + time * 1000)
  });
}




------------	Functions to check 

function productIngredients(id) {
  var ingredientsId = db.products.findOne({_id: id}).ingredients;
  var ingredients = [];

  ingredientsId.forEach(function(ingredientId) {
    var tempAdd = db.ingredients.findOne({_id: ingredientId});

    if (!tempAdd) {
      print('ERR: Ingredient with ID ' + ingredientId + ' not found');
    } else {
      ingredients.push(tempAdd);
    }
  });
  printjson(ingredients);
}


------------	Products

db.products.insertMany([
{
	_id: '0'
	name: "Halloumi and mushroom salad",
	price: "",
	ingredient: [0, 1, 2, 3, 4],
	bread_to_choose: [5, 6 ,7 ,8 ,9],
	bread_to_add: {
	bread_choice : { [10, 5, 7, 9], price: 11 }			
	
}


])

[
    {
      "name": "American Waffle",
      "description": "Crispy waffle, sautéed onions and mushrooms in 4-cheese sauce, poached eggs, green onion. Served with a salad of your choice.",
      "price": 61,
      "img": "https://gregcafe.co.il/wp-content/uploads/2023/01/american-waffle.jpg",
      "categorie": "Breakfasts"
    },
    {
      "name": "Norwegian Waffle (for those with permission)",
      "description": "Crispy waffle, smoked salmon, sautéed spinach and onions in cheese sauce, sunny-side-up eggs, green onion. Served with a salad of your choice.",
      "price": 74,
      "img": "https://gregcafe.co.il/wp-content/uploads/2023/01/norwegian-waffle.jpg",
      "categorie": "Breakfasts"
    },
    {
      "name": "Eggs Benedict",
      "description": "Brioche, spinach, hollandaise, poached eggs, onion jam, green onion, black pepper. Served with a salad of your choice. Add sautéed mushrooms and onions for ₪10. Add smoked salmon for ₪22.",
      "price": 68,
      "img": "https://gregcafe.co.il/wp-content/uploads/2023/01/eggs-benedict.jpg",
      "categorie": "Breakfasts"
    },
    {
      "name": "French Brioche",
      "description": "Brioche, truffle butter, mushroom Alfredo sauce, mozzarella cheese, sunny-side-up eggs, green onion. Served with a side salad.",
      "price": 68,
      "img": "https://gregcafe.co.il/wp-content/uploads/2023/01/french-brioche.jpg",
      "categorie": "Breakfasts"
    },
    {
      "name": "Shakshuka",
      "description": "Traditional hot skillet dish with two eggs. Served with bread and a salad of your choice. House – ₪65. Balkan – Bulgarian cheese, pesto, eggplant ₪68. Mozzarella – pesto, fresh mozzarella ₪68. Falafel – falafel balls, raw tahini, parsley ₪68. Vegan – falafel, sweet potato cubes, roasted eggplant, raw tahini ₪68.",
      "price": 65,
      "img": "https://gregcafe.co.il/wp-content/uploads/2023/01/shakshuka.jpg",
      "categorie": "Breakfasts"
    },
	{
	  "name": "Krihon and Coffee - Served until 12:00",
      "description": "The sandwich is served with lettuce, tomato, yellow cheese / Bulgarian cheese / lemon cream / ricotta peppers / labneh / skordalia / tuna salad / guacamole, alongside Kalamata olives.",
      "price": 36,
	  "image": "https://gregcafe.co.il/wp-content/uploads/2025/01/קפה-וכריכון-scaled.jpg",
	  "category": "Breakfast"
	},
	{
      "name": "Coffee and Pastry",
      "description": "Coffee and pastry from the selection of your choice",
      "price": 28,
      "image": "https://gregcafe.co.il/wp-content/uploads/2025/01/קפה-ומאפה-scaled.jpg",
      "category": "Breakfast"
	},
	{
  "name": "Selection of Pastries",
  "description": "A changing selection of pastries",
  "price": 18,
  "image": "https://gregcafe.co.il/wp-content/uploads/2025/01/מאפה-scaled.jpg",
  "category": "Breakfast"
},
{
  "name": "Couple's Breakfast",
  "description": "Eggs of your choice, Bulgarian cheese, labneh with za'atar and olive oil, lemon cream with green onions, guacamole, ricotta with peppers, tuna salad, green tahini with spiced chickpeas, skordalia with almonds, tomato salsa with balsamic, jam, grain bar, homemade bread, choice of salad. Served with a small coffee and a small cold drink (orange/carrot/lemonade).",
  "price": 154,
  "image": "https://gregcafe.co.il/wp-content/uploads/2025/01/ארוחת-בוקר-זוגית-scaled.jpg",
  "category": "Breakfast"
},
{
  "name": "Single Vegan Breakfast VO",
  "description": "Legume omelette, slices of vegan cheese, guacamole, vegan spreadable cheese, vegan Bulgarian cheese slices, grain bar, jam, green tahini with spiced chickpeas, tomato salsa with balsamic, personal salad, homemade bread. Served with a small coffee and a small cold drink (orange/carrot/lemonade).",
  "price": 82,
  "image": "https://gregcafe.co.il/wp-content/uploads/2025/01/ארוחת-בוקר-יחיד-טבעוני-scaled.jpg",
  "category": "Breakfast"
},
{
  "name": "Vegan Couple's Breakfast VO",
  "description": "Legume omelette, slices of vegan cheese, almond skordalia, green tahini with spiced chickpeas, guacamole, vegan spreadable cheese, vegan Bulgarian cheese, pesto, grain bar, jam, eggplant tahini, tomato salsa with balsamic, personal salad, homemade bread. Served with a small coffee and a small cold drink (orange/carrot/lemonade).",
  "price": 154,
  "image": "https://gregcafe.co.il/wp-content/uploads/2025/01/ארוחת-בוקר-טבעוני-זוגי-scaled.jpg",
  "category": "Breakfast"
},
{
  "name": "Greek Breakfast",
  "description": "Fried eggs served on cheese and spinach tiropita, served with almond skordalia, labneh with olive oil and tomato salsa, ricotta with peppers, and a Greek salad. (Served without bread).",
  "price": 67,
  "image": "https://gregcafe.co.il/wp-content/uploads/2025/01/בוקר-יווני-scaled.jpg",
  "category": "Breakfast"
},
{
  "name": "Galilean Breakfast",
  "description": "Bagels with gibna and za'atar leaves, cucumbers and herbs on labneh with sumac, green tahini with seasoned chickpeas, ricotta with peppers, quinoa tabbouleh salad, and za'atar omelette. (Served without bread).",
  "price": 69,
  "image": "https://gregcafe.co.il/wp-content/uploads/2025/01/בוקר-גלילי-scaled.jpg",
  "category": "Breakfast"
},
{
  "name": "Turkish Bourekas",
  "description": "Cheese-filled bourekas, served with labneh, olive oil, green tahini with seasoned chickpeas, hard-boiled egg, spicy jalapeno spread, crushed tomatoes with olive oil, served with pickled cucumber and fresh vegetables.",
  "price": 59,
  "image": "https://gregcafe.co.il/wp-content/uploads/2025/01/בורקס-טורקי-scaled.jpg",
  "category": "Breakfast"
}
  ]


------------	Ingredients

db.products.insertMany([
{
	_id: 0,
	name: 'tomato'
},{
	_id: 1,
	name: 'walnuts'
},{
	_id: 2,
	name: 'parsley'
},{
	_id: 3,
	name: 'garlic'
},{
	_id: 4,
	name: 'seed'
},{
	_id: 5,
	name: 'black ciabatta'
},{
	_id: 6,
	name: 'sourdough'
},{
	_id: 7,
	name: 'light bread'
},{
	_id: 8,
	name: 'white ciabatta'
},{
	_id: 9,
	name: 'gluten-free bread'
},{
	_id: 10,
	name: 'house bread'
},{
	_id: 11,
	name: 'gluten-free bread'
},{
	_id: 12,
	name: 'gluten-free bread'
},{
	_id: 13,
	name: 'gluten-free bread'
},{
	_id: 14,
	name: 'gluten-free bread'
},{
	_id: 15,
	name: 'gluten-free bread'
},{
	_id: 16,
	name: 'gluten-free bread'
},{
	_id: 17,
	name: 'gluten-free bread'
},{
	_id: 18,
	name: 'gluten-free bread'
},{
	_id: 19,
	name: 'gluten-free bread'
},{
	_id: 20,
	name: 'gluten-free bread'
},{
	_id: 21,
	name: 'gluten-free bread'
},{
	_id: 22,
	name: 'gluten-free bread'
}
])
